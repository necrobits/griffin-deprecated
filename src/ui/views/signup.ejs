<%- include('../template/head', {title: title}); %>
<body>
<div class="cover-container">
    <div>
        <main class="inner cover">
            <div class="logo">
                <img src="/assets/logo.png"/>
            </div>

            <div class="heading">
                <h1 class="noselect" style="margin-bottom: 0px"><%= __('brand') %></h1>
                <div class="noselect" style="color:#666666; font-size: .9rem"><%= __('signup_page.title') %></div>
            </div>

            <% if(locals.error){ %>
                <div class="submit-error noselect">
                    <%= __('error.' + error.error, {field: __('field.' + error.args.field)}) %>
                </div>
            <% } %>

            <form id="form" class="signup-form" method="post">
                <% userFields.forEach(function(field){ %>
                    <div class="form-field-container labeled">
                        <label class="textfield-outlined small-field w-100">

                            <input id="<%= field.key %>"
                                   name="<%= field.key %>"
                                   type="<%= field.type %>"
                                   placeholder=" "
                                   minlength="<%= field.minLength %>"
                                   maxlength="<%= field.maxLength %>"
                                   data-rule-<%= field.type %>="true"
                                   data-msg-email="<%= __('field_constraint.email') %>"
                                   data-rule-minlength="<%= field.minLength %>"
                                   data-rule-maxlength="<%= field.maxLength %>"
                                   data-msg-minlength="<%= __('field_constraint.minlength', {
                                       field: __('field.' + field.key),
                                       value: field.minLength
                                   }) %>"
                                   data-msg-maxlength="<%= __('field_constraint.maxlength', {
                                       field: __('field.' + field.key),
                                       value: field.maxLength
                                   }) %>"
                                   data-msg-remote="<%= __('error.field_exists', {field: "{0}"}) %>"
                            <% if(!field.optional){ %>
                                   required
                                   data-rule-required="true"
                                   data-msg-required="<%= __('field_constraint.required', {field: __('field.' + field.key)}) %>"
                                   value=""
                                    <% } %>
                            <% if(field.pattern){ %>
                                   data-rule-<%= field.key %>-pattern="true"
                                   data-msg-<%= field.key %>-pattern="<%= __('error_pattern.' + field.key) %>"
                                    <% } %>
                            >

                            <span class="noselect"><%= __('field.' + field.key) %></span>

                        </label>
                    </div>
                    <% if (field.key === 'password'){ %>
                        <div class="form-field-container labeled">
                            <label class="textfield-outlined small-field w-100">

                                <input id="password_repeat"
                                       name="password_repeat"
                                       type="password"
                                       placeholder=" "
                                       minlength="<%= field.minLength %>"
                                       maxlength="<%= field.maxLength %>"
                                       required

                                       data-rule-minlength="<%= field.minLength %>"
                                       data-rule-maxlength="<%= field.maxLength %>"
                                       data-msg-minlength="<%= __('field_constraint.minlength', {
                                           field: __('field.' + field.key),
                                           value: field.minLength
                                       }) %>"
                                       data-msg-maxlength="<%= __('field_constraint.maxlength', {
                                           field: __('field.' + field.key),
                                           value: field.maxLength
                                       }) %>"
                                       data-rule-required="true"
                                       data-msg-required="<%= __('field_constraint.required', {field: __('field.password_repeat')}) %>"
                                >
                                <span><%= __('field.password_repeat') %></span>

                            </label>
                        </div>
                    <% } %>
                <% }); %>

                <div class="form-actions">
                    <div class="submit-row">
                        <button type="submit"
                                class="btn"
                                id="submit-id-submit"
                                data-purpose="do-register"
                        >
                            <%= __('signup_page.submitBtn') %>
                        </button>
                    </div>
                </div>

                <div class="login-box_footer">
                    <%= __('signup_page.login_guide') %>
                    <a class="sign-link" href="<%= loginPath %>" data-purpose="login">
                        <%= __('signup_page.login_link_text') %>
                    </a>
                </div>
            </form>

        </main>
    </div>
</div>

</body>
<script>
    const userFields = <%- JSON.stringify(userFields) %>;

    for (let field of userFields) {
        if (field.hasOwnProperty('pattern')) {
            $.validator.addMethod(field.key + '-pattern', function (value, element) {
                return new RegExp(field.pattern, 'gi').test(value)
            });
        }
    }


    $('#form').validate({
        onkeyup: false,
        focusCleanup: true,
        errorPlacement: function (err, element) {
            element.parent().append(err);
        },
        rules: {
            username: {
                remote: {
                    url: `/api/v1/usernamecheck`,
                    type: "get",
                    data: {
                        username: function () {
                            return $("#username").val();
                        }
                    },
                    dataFilter: function (res) {
                        const data = JSON.parse(res);
                        return !data.exist
                    }
                },
            },
            email: {
                remote: {
                    url: `/api/v1/emailcheck`,
                    type: "get",
                    data: {
                        email: function () {
                            return $("#email").val();
                        }
                    },
                    dataFilter: function (res) {
                        const data = JSON.parse(res);
                        return !data.exist
                    }
                },
            },
            password_repeat: {
                equalTo: '#password'
            }
        }
    });
</script>
</html>
